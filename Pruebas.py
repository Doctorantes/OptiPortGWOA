#%%%  
def singer(h, i, A):
    #We initialize two sets B and C
    # B is intended to store all possible volume settings for each song.
    # C tiene como finalidad ser un conjunto auxiliar que se reconstruye 
    #  para cada cancion
    B = [i]
    C = [i]
    for l in A: # En cada iteracion de i este ciclo for , obtenemos todos
                # los posibles volumenes que  la cancion i-esima puede tomar 
                # alojandolos en B.
                # The information of the set C is rescued with a copy and 
                #from there it is initialized again, as an empty list.
        B = C.copy()

        #print(B, l)
        C = []

        for p in B:  # In this for loop, in each iteration we take an element 
                     # of set B and add and subtract the corresponding change 
                     # in variables t1 and t2 respectively.
            t1 = p + l
            #print(t1)
            t2 = p - l
            #print(t2)
            # In the following two if-blocks, we decide on the modifications 
            # we must do to t1 and t2. So that the extremes of the given volumes
            # are allowed
            if 0 > t1 or t1 > h: 
                t1 = p
            if 0 > t2 or t2 > h:
                t2 = p
                
            C.append(t1) #We add to the list C, t1 and t2 generated by p of B
            C.append(t2)
            
    B = C # At the end of the iteration we have created all possible volumes C 
    #of the next song taking into account the possible volumes B of the previous song.
    max_vol = max(B) #At the end of the two previous cycles we will have the set 
    #of all the possible volumes for the last song, we take the maximum
    
    return max_vol

print(singer(10, 1, [4,4,4,4]))
#%%%
